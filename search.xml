<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[基于Hexo的博客搭建(4) - 番外篇]]></title>
    <url>%2F2019-12-19%2F</url>
    <content type="text"><![CDATA[再挖一坑👀]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[基于Hexo的博客搭建(3) - 写作篇]]></title>
    <url>%2F2019-12-15%2F</url>
    <content type="text"><![CDATA[挖坑待填~]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[基于Hexo的博客搭建(2) - 部署篇]]></title>
    <url>%2F2019-12-11%2F</url>
    <content type="text"><![CDATA[如果你想让人通过互联网访问到你的博客，那么你有三个选择： 自己搭建服务器 购买云主机 使用github pages提供的免费托管服务 如果你是新手或者学生党，那么推荐你选择第三种方式。本文将介绍以此种方式来部署静态网站。 创建站点存储库至此，如果你还没有GitHub账号，去申请一个吧！我保证你不会因此而少块肉的🙃 创建一个名为[你的用户名].github.io的存储库。注意，你的存储库必须得是这样的命名，否则无效~ 安装git部署插件执行下面的命令，开始无痛安装~~ 1npm install --save hexo-deployer-git 部署将你的公钥绑定在GitHub上，如果尚未生成公钥对，执行如下命令生成新的公钥对： 1ssh-keygen 接下来控制台会和你对话，问你想要保存在哪里，想要设置什么密码等等，一路回车就好。这样，一切都是默认的设置了👌如果你是Win系统，你将在如下目录找到生成的密钥文件id_rsa和公钥文件id_rsa.pub: 1C:\Users\你的Windows用户名\.ssh 在github点击你的头像，进入设置页；找到SSH and GPG keys，新建一个SSH key，将id_rsa.pub中的内容复制到文本框中： 在站点配置文件_config.yml中的末尾部分找到如下字段并设置： 123456# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: &apos;git&apos; repo: [你的仓库地址] branch: master 注意：此处的#号代表注释，deploy下属字段的缩进不可以修改（其他的也不行，因为这里的缩进是一种语法），否则会报错 在博客根目录下打开终端，输入命令进行部署： 123hexo clhexo ghexo deploy 过一段时间后，在浏览器中输入你的仓库名称，就能访问到你的博客了。 支线任务我们的博客至此已经部署成功！接下来的内容对于建站来讲并不是必需的，但能让人更容易、更安全地访问你的博客。 自定义域名许多云服务商都有提供域名服务，没有域名的话可以前往购买。此处仅说明如何将自己的域名指向github page站点。 新建一个CNAME文件，向其中写入你的顶级域名，像这样： 1cocoonut.top 该文件必须在你的站点仓库的根目录下。为了保证该文件在你每次部署后不被覆盖，你可以将它放在source目录下 注意CNAME没有任何文件后缀名，你可以在github仓库中直接新建一个文件，然后再down下来修改 前往你的域名提供商网站，向DNS配置中增加2条CNAME记录： 12@ CNAME XXXX.github.iowww CNAME XXXX.github.io 将XXXX替换为github你的用户名即可。前者是让你的域名能通过 cocoonut.top 这种形式访问;而后者是让你的域名能通过 www.cocoonut.top这种形式访问。 让博客域名支持HTTPS在Chrome浏览器中，没有有效的SSL证书的网页都被标记为“不安全”，如国内某安全卫士旗下的子产品官网：使用HTTPS协议通信的数据都是加密的，会更加安全，而github也为自定义域名提供了这种服务，启用也非常简单：在你的站点仓库下 -&gt; settings 找到Custom domain，填入你的域名；勾选Enforce HTTPS 选项。 设置后并不会立即生效。你可能需要等待数个小时 添加站点地图站点地图是记录了网站中所有超链接的xml文件，它能帮助搜索引擎等爬虫抓取网页。npm为Hexo提供了站点地图插件，可以很方便的生成站点地图文件。 被Google收录 安装插件 1npm install hexo-generator-sitemap --save 在站点配置文件中添加 12sitemap: path: sitemap.xml 该插件会在你每次hexo g时，在public下生成sitmap.xml文件。 前往Google searchConsole Google需要验证你拥有该网站，关于验证方式你有多种选择，这里个人认为比较方便的是使用HTML标记： 修改主题配置文件，找到 google-site-verification，值修改为 google 提供的 meta 中 content 的内容。 如果你没有在配置项中找到该内容，请查看主题目录下的_partials-&gt;head.swig中是否有如下内容，如果没有，请手动添加 然后重启、发布博客。回到Google searchConsole，点击验证按钮，然后提交站点地图。 提交站点地图后我们的网站还没有被抓取，要等搜索引擎下一次更新索引你才能在 google 上搜到，请耐心等待。 被百度收录和向Google提供站点地图类似，但GitHub主机禁止百度的爬虫访问，因此要麻烦一些。]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[基于Hexo的博客搭建(1) - 建站篇]]></title>
    <url>%2F2019-12-06%2F</url>
    <content type="text"><![CDATA[Hexo是一个快速、简洁且高效的静态博客框架。本文将介绍如何使用Hexo来搭建个人博客。 环境搭建Hexo依赖于以下环境： Node.js（建议10.0及以上版本） git 安装过程相对简单，此处不再赘述，请自行Google~ 安装Hexo你可以使用如下命令来全局安装Hexo： 1npm install -g hexo-cli 执行完上述命令后，可以使用下面的命令来确认是否安装成功： 1hexo -v 如果返回版本号等信息，那么恭喜你，入了一个深坑完成了第一步！ 创建博客目录并初始化创建项目目录并进入： 12mkdir myblogcd myblog 此处我建立了名为myblog的文件夹,你可以自定义名称哦~ 请注意，后续所有操作默认在博客根目录下进行 初始化blog： 1hexo init 至此，已经生成了基础的博客框架，先查看一下目录结构： 123456789101112131415·├── node_modules //依赖安装目录├── scaffolds //模板文件夹，新建的文章将会从此目录下的文件中继承格式| ├── draft.md //草稿模板| ├── page.md //页面模板| └── post.md //文章模板├── source //资源文件夹，用于放置图片、数据、文章等资源| └── _posts //文章目录├── themes //主题文件夹| └── landscape //默认主题├── .gitignore //指定不纳入git版本控制的文件├── _config.yml //站点配置文件├── db.json //数据库文件├── package.json└── yarn-lock.json 在本地启动预览： 1hexo server 执行完毕后，默认会在本地4000端口启动web程序：localhost:4000 如果默认的4000端口被占用，也没有关系，这条指令还可以附加参数：hexo s -p[端口号]你也可以同时启动debug模式：hexo s -debug 在浏览器中你会看到它长这模样： emmm默认的主题有点丑，请不要着急，咱先搭建起来，最后再捯饬好康的主题 ~ 第一篇博客虽然Hexo帮我们写好了一篇，但接下来我们要亲手试着写一篇博客，毕竟意义不同嘛(ง •_•)ง 回到cli，接着上面的操作，我们需要按Ctrl+C先停止在本地运行的网站。新建一篇博客： 1hexo new &quot;my first blog&quot; 你将看到在.\source\_posts\目录下生成了一个名为my first blog.md的文件，可以用记事本（或者你喜欢的任何编辑器）打开它来编写内容。 Hexo 支持使用流行的 Markdown 语法来撰写文章，请使用支持Markdown语法的编辑器或插件哦 接下来，清理一下数据库文件和public文件夹，然后生成、预览： 123hexo clhexo generatehexo s 细致如你，一定发现了，这些常用命令存在简写形式，更多细节参考官方文档 ~ 更换主题yilia是一个简约美观的博客主题，我们就以此为例来说明如何更换。当然，除了github上开源的主题，官方也为我们提供了诸多选择。 下载主题到themes目录下 1git clone https://github.com/litten/hexo-theme-yilia themes/yilia 等待执行完成后，你会在themes/yilia下找到下载的内容。 更改配置信息在博客根目录下，找到_config.yml文件，打开修改其theme字段： 重新清除缓存、生成、启动预览即可看到效果。 根目录下和主题目录下都存在一个_config.yml文件，前者被称为站点配置文件，后者被称为主题配置文件，绝大多数的内容可以在这里修改，你可以修改这些文件中参数来定制你的blog 至此，我们已经成功在本地搭建起了博客，这样当然还不够，我们建立博客更多是想要与人分享，圈地自萌怎么能行！为此我们有必要将博客部署在远端服务器上，并且能通过互联网访问。 请务必参考激动人心的部署篇！]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[高效使用搜索引擎]]></title>
    <url>%2F2019-12-05%2F</url>
    <content type="text"><![CDATA[海量的信息都可以通过搜索引擎这只巨大的爬虫抓取到，学会高效使用搜索引擎是非常必要而且基础的技能，本文整理了一些常用的搜索姿势，熟练使用将很大程度提高你的工作和学习效率。 1.搜索完全匹配的结果&quot;Red Dead Redemption&quot; 双引号表示完全匹配，结果中仅出现与搜索文本完全相同的内容 2.从搜索结果中排除特定内容a -b 搜索包含a但不包含b的结果（注意a后面的空格不能省略） 3.搜索通配符&amp;未知词长城防*墙 星号表示任意字符串 4.搜索社交媒体@something 搜索社群中的相关内容,如微博等 5.组合搜索A OR B 在关键词A和B中间加OR，表示逻辑“或”操作,将返回包含有A或者B的内容,或者同时包含A与B 6.站点内搜索site:zhihu.com 西瓜 在相应的网站或域名前加上site:,将只返回在该站点内的结果 需要注意的是，这些搜索技巧是可以相互组合使用的，这会让搜索结果更加趋近你想要的信息。如：site:zhihu.com *瓜 -西瓜可以抓取知乎上关于各种瓜（除了西瓜）的故事🙃 7.搜索词汇以及相关文章difine:word 将返回word的词汇定义或其相关文章 8.搜索特定文件格式火龙果 filetype:ppt 将返回关键词为ppt格式的链接 9.搜索标题内包含关键词的结果intitle:象牙 将返回标题中含有关键字的结果 10.搜索网页中含有某链接的结果link:http://baidu.com 结果为包含此链接的页面 11.搜索域名中包含特定内容的网站inurl:diygod 结果为URL中含有diygod的网址]]></content>
      <categories>
        <category>零食</category>
      </categories>
      <tags>
        <tag>零食</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[开启chrome实验中的特性]]></title>
    <url>%2F2019-12-02%2F</url>
    <content type="text"><![CDATA[当我们想试用那些还不被广泛支持的实验性特性时，可以在地址栏输入:1chrome://flags#enable-experimental-web-platform-features 将选项设置为enabled 这样就可以开启实验中的特性了]]></content>
      <categories>
        <category>零食</category>
      </categories>
      <tags>
        <tag>零食</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[第一篇博客]]></title>
    <url>%2F2019-11-30%2F</url>
    <content type="text"><![CDATA[第一次总是意义非凡，值得纪念的1hello world 开始啦！]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
      </tags>
  </entry>
</search>
